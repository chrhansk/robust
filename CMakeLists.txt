CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(Robust)

FIND_PACKAGE(Boost 1.54
  COMPONENTS log log_setup thread system
  REQUIRED)

ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)

SET(CMAKE_CXX_STANDARD 11)

INCLUDE(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
IF(COMPILER_SUPPORTS_CXX11)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ELSE()
  CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

  IF(COMPILER_SUPPORTS_CXX0X)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  ELSE()
    MESSAGE(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support.\
                    Please use a different C++ compiler.")
  ENDIF()
ENDIF()

FIND_PACKAGE(Threads REQUIRED)

#SET(THREADS_PREFER_PTHREAD_FLAG ON)
#FIND_PACKAGE(Threads REQUIRED)

FIND_PACKAGE(Protobuf REQUIRED)

INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

PROTOBUF_GENERATE_CPP(PROTO_SRC PROTO_HEADER "pbf/graph.proto")
ADD_LIBRARY(proto ${PROTO_HEADER} ${PROTO_SRC})

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")

ENABLE_TESTING()

FIND_PACKAGE(METIS REQUIRED)
INCLUDE_DIRECTORIES(${METIS_INCLUDE_DIRS})

FIND_PACKAGE(GTest REQUIRED)
INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})

FIND_PACKAGE(TBB REQUIRED)

FIND_PACKAGE(Doxygen)

IF(DOXYGEN_FOUND)
  SET(DOXYFILE_IN ${CMAKE_SOURCE_DIR}/doc/Doxyfile.in)
  SET(DOXYFILE ${CMAKE_BINARY_DIR}/doc/Doxyfile)

  CONFIGURE_FILE(${DOXYFILE_IN} ${DOXYFILE} @ONLY)

  ADD_CUSTOM_TARGET(doc
    COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE}
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/doc
    COMMENT "Generating API documentation with Doxygen"
    VERBATIM)

ENDIF()


FIND_PROGRAM(CPPCHECK cppcheck)

IF(CPPCHECK)
  FILE(GLOB_RECURSE SOURCE_FILES ${CMAKE_SOURCE_DIR} "*.cc" "*.hh")

  ADD_CUSTOM_TARGET(
        cppcheck
        COMMAND ${CPPCHECK}
        --enable=warning,performance,portability,information
        --std=c++11
        --quiet
        ${SOURCE_FILES})
ENDIF()

IF(CMAKE_BUILD_TYPE MATCHES "Release")
  MESSAGE("Release mode, disabling assertions")
  ADD_DEFINITIONS("-DNDEBUG")
ENDIF()

ADD_SUBDIRECTORY(src)
